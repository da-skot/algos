/*
Полный ориентированный взвешенный граф задан матрицей смежности. Постройте матрицу кратчайших путей между его вершинами. Гарантируется, что в графе нет циклов отрицательного веса.

Формат ввода
В первой строке вводится единственное число N (1 ≤ N ≤ 100) – количество вершин графа. 
В следующих N строках по N чисел задается матрица смежности графа (j-ое число в i-ой строке соответствует весу ребра из вершины i в вершину j). 
Все числа по модулю не превышают 100. На главной диагонали матрицы – всегда нули.

Формат вывода
Выведите N строк по N чисел – матрицу кратчайших расстояний между парами вершин. j-ое число в i-ой строке должно быть равно весу кратчайшего пути из вершины i в вершину j. 
*/

using System;

namespace Floyd
{
    class Program
    {
        static void Main(string[] args)
        {
            int n = Int32.Parse(Console.ReadLine());
            int[,] arr = new int[n, n];
            for(int i = 0; i < n; i++)
            {
                string[] str = Console.ReadLine().Split(' ');
                for (int j = 0; j < n; j++)
                    arr[i, j] = Int32.Parse(str[j]);
            }
            for (int k = 0; k < n; k++)
                for (int i = 0; i < n; i++)
                    for (int j = 0; j < n; j++)
                        arr[i, j] = Math.Min(arr[i, j], arr[i, k] + arr[k, j]);
            for (int i = 0; i < n; i++)
            {
                for (int j = 0; j < n; j++)
                    Console.Write(arr[i, j]+" ");
                Console.WriteLine();
                
            }
        }
    }
}
