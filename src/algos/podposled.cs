/*
Подпоследовательность - это список элементов, в которых играет роль их порядок. Определенный элемент может появляться в подпоследовательности несколько раз. 
Подпоследовательностью Z строки X является строка X, возможно, с удаленными элементами. 
Например, если X является подстрокой ABC, то она имеет 8 подпоследовательностей ABC, AB, AC, BC, A, B, C и пустая строка. 
Если X и Y являются строками, то Z является общей подпоследовательностью X и Y, если она является подпоследовательностью обеих строк. 
Понятия "подпоследовательность" и "подстрока" не эквивалентны. Подстрока - это подпоследовательность, в которой все символы выбраны из смежных позиций в строке.

Задача: Для двух заданных строк X и Y найти длину наидлиннейшей общей подпоследовательности Z строк X и Y.

Формат ввода
Две строки входных данных содержат в себе значения строк X и У.
Длины строк: 0 <= L <= 10000

Формат вывода
Целое число - длина наибольшей общей подпоследовательности строк X и Y
*/

using System;
using System.IO;

namespace podposled
{
    class Program
    {
        static void Main(string[] args)
        {
            string x, y;
            using (StreamReader sr = new StreamReader("input.txt"))
            {
                x = sr.ReadLine();
                y = sr.ReadLine();
            }
            int n = x.Length;
            int m = y.Length;
            int[,] arr = new int[n, m];
            for (int i = 1; i < n; i++)
            {
                arr[1, 0] = 0;
                for (int j = 1; j < m; j++)
                {
                    arr[0, j] = arr[1, j];
                    if (x[i] == y[j])
                        arr[1, j] = arr[0, j - 1] + 1;
                    else
                    {
                        if (arr[0, j] >= arr[1, j - 1])
                            arr[1, j] = arr[0, j];
                        else
                            arr[1, j] = arr[1, j - 1];
                    }
                }
            }
            if (arr[1, m - 1] != 0)
                arr[1, m - 1]++;
            using (StreamWriter sw = new StreamWriter("output.txt"))
            {
                sw.WriteLine(arr[1, m - 1]);
            }
        }
    }
}
